/ Height Of Binary Tree
// Send Feedback
// Given a binary tree, find and return the height of given tree.
// Input format :
// Nodes in the level order form (separated by space). If any node does not have left or right child, take -1 in its place
// Output format :
// Height
// Constraints :
// 1 <= N <= 10^5
Sample Input 1:
10 20 30 40 50 -1 -1 -1 -1 -1 -1
Sample Output 1:
3
Sample Input 2:
3 -1 -1
Sample Output 2:
1

/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */
import java.util.*;
public class Solution {

	public static int height(BinaryTreeNode<Integer> root) {
		if(root==null)
            return 0;
        int left=height(root.left);
        int right=height(root.right);
        return 1+ Math.max(left,right);
	}

}
