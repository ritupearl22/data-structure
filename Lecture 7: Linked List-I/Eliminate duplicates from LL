// Eliminate duplicates from LL
// Send Feedback
// Given a sorted linked list (elements are sorted in ascending order). 
//     Eliminate duplicates from the given LL, such that output LL contains only unique elements.
// You don't need to print the elements, just remove duplicates and return the head of updated LL.
// Input format : Linked list elements (separated by space and terminated by -1)

// Sample Input 1 :
// 1 2 3 3 3 4 4 5 5 5 7 -1
// Sample Output 1 :
// 1 2 3 4 5 7

/*

	Following is the Node class already written for the Linked List

	class LinkedListNode<T> {
    	T data;
    	LinkedListNode<T> next;
    
    	public LinkedListNode(T data) {
        	this.data = data;
    	}
	}

*/

public class Solution {
       public static LinkedListNode<Integer> removeDuplicates(LinkedListNode<Integer> head){
           if(head == null || head.next == null)
            return head;
 
        LinkedListNode<Integer> prev = head;    
        LinkedListNode<Integer> p = head.next;
 
        while(p != null){
            if(p.data.compareTo(prev.data) == 0)
            {
                prev.next = p.next;
                p = p.next;
            }
            else{
                prev = p;
                p = p.next; 
            }
        }
       return head;
    }
}
