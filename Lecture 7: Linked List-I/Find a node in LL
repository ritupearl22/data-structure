// Find a node in LL
// Send Feedback
// Given a linked list and an integer n you need to find and return index where n is present in the LL. Do this iteratively.
// Return -1 if n is not present in the LL.
// Indexing of nodes starts from 0.
// Input format :
// Line 1 : Linked list elements (separated by space and terminated by -1)
// Line 2 : Integer n 
// Output format :
// Index
// Sample Input 1 :
// 3 4 5 2 6 1 9 -1
// 5
// Sample Output 1 :
// 2
// Sample Input 2 :
// 3 4 5 2 6 1 9 -1
// 6
// Sample Output 2 :
// 4

/*

	Following is the Node class already written for the Linked List

	class LinkedListNode<T> {
    	T data;
    	LinkedListNode<T> next;
    
    	public LinkedListNode(T data) {
        	this.data = data;
    	}
	}

*/

public class Solution {
    public static int findNode(LinkedListNode<Integer> head, int n) {
        int count=0;
        if(head==null)
        {
            return -1;
        }
        if(head.data==n){
            return count;
        }
        else
        {
        while(head.data!=n)
        {
            if(head.next==null)
            {
                return -1;
            }
            head=head.next;
            count++;
        }
        }
       return count;    
	}
}
