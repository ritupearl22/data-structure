// Minimum bracket Reversal
// Send Feedback
// Given a string expression which consists only ‘}’ and ‘{‘. The expression may not be balanced. You need to find the minimum number of bracket reversals which are required to make the expression balanced.
// Return -1 if the given expression can't be balanced.
// Input Format :
// String S
// Output Format :
// Required count
// Sample Input 1 :
// {{{
// Sample Output 1 :
// -1
// Sample Input 2 :
// {{{{}}
// Sample Output 2 :
// 1


import java.util.*;
public class Solution {
  
	public static int countBracketReversals(String input) {
	      int len = input.length();
          if(len % 2 !=0)
              return -1;
        Stack<Character> s= new Stack<>();
        for(int i=0; i<len;i++){
            char c= input.charAt(i);
            if(c=='}' && !s.empty())
            {
                if(s.peek()=='{')
                    s.pop();
                else
                    s.push(c);
            }
            else
                s.push(c);
        }
        int redlen = s.size();
        int n=0;
        while(!s.empty() && s.peek()=='{'){
            s.pop();
            n++;
        }
        
       return (redlen/2 + n%2);
    }
	
}
